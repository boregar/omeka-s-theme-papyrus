<!-- template begin: common/linked-resources -->
<?php
use Laminas\Form\Element\Select;

// Set up pagination.
$pagination = $this->pagination(null, $totalCount, $page, $perPage);
$fragment = 'resources-linked';
$pagination->setFragment($fragment);

// Set up locale.
$valueLang = null;
if ($this->status()->isSiteRequest()) {
    $lang = $this->lang();
    $filterLocale = (bool) $this->siteSetting('filter_locale_values');
    $valueLang = $filterLocale ? [$lang, ''] : null;
}

// Set up resource property select.
$labelMap = [
    'items' => 'Items', // @translate
    'item_sets' => 'Item sets', // @translate
    'media' => 'Media', // @translate
];
$resourcePropertiesSelect = new Select('resource_property');
$resourcePropertiesSelect->setValue($resourceProperty);
$resourcePropertiesSelect->setAttributes([
    'id' => 'resource-property-select',
    'data-url' => $this->url(null, [], true),
    'data-fragment' => $fragment,
]);
$valueOptions = [];
foreach ($resourcePropertiesAll as $type => $resourceProperties) {
    if (!$resourceProperties) {
        continue;
    }
    $valueOptions[$type] = [
        'label' => $labelMap[$type],
        'options' => [sprintf('%s:', $type) => sprintf('%s: All', $labelMap[$type])],
    ];
    foreach ($resourceProperties as $resourceProperty) {
        $label = $resourceProperty['label_is_translatable']
            ? $this->translate($resourceProperty['label'])
            : $resourceProperty['label'];
        $valueOptions[$type]['options'][] = [
            'value' => $resourceProperty['compound_id'],
            'label' => sprintf('%s: %s', $labelMap[$type], $label),
            'attributes' => [
                'title' => $resourceProperty['term'],
            ],
        ];
    }
}
$resourcePropertiesSelect->setValueOptions($valueOptions);
?>
<div id="linked-resources">

<div class="linked-header bulma-container has-text-centered">
    <?php echo $pagination; ?>
</div>

<?php foreach ($subjectValues as $values): ?>
<?php
$caption = sprintf(
    $this->translate('%s with "%s: %s"'),
    $this->translate($labelMap[$resourceType]),
    $values[0]['property_alternate_label'] ?? $this->translate($values[0]['property_label']),
    $objectResource->displayTitle()
);
?>
<div>
    <caption class="linked-resource-property"><?php echo $this->escapeHtml($caption); ?></caption>
    <ul class="resource-list linked-list cm-flk-block" data-freescroll="false">
        <?php foreach ($values as $value): ?>
        <li class="linked-resource cm-flk-cell">
          <div class="cm-item-media cm-is-rounded">
            <?php
            $resource = $value['val']->resource();
            echo $this->LinkPretty($resource, null, 'square');
            ?>
          </div>
          <div class="cm-item-content">
            <span class="resource-class"><?php echo $this->ResourceClassIcon($resource); ?></span>
            <?php
            $linkContent = sprintf('<h3 class="resource-name">%s</h3>', $resource->displayTitle());
            echo $resource->linkRaw($linkContent, null, ['class' => 'resource-link']);
            ?>
          </div>
        </li>
        <?php endforeach; ?>
      </ul>
</div>
<?php endforeach; ?>

</div>

<script>
const propertySelect = $('#resource-property-select');
const url = propertySelect.data('url');
const fragment = propertySelect.data('fragment');
propertySelect.on('change', function(e) {
    const selectedOption = propertySelect.find(':selected');
    const resourceProperty = selectedOption.val();
    window.location = url + '?' + $.param({resource_property: resourceProperty}) + '#' + fragment;
});
</script>
<!-- template end: common/linked-resources -->
